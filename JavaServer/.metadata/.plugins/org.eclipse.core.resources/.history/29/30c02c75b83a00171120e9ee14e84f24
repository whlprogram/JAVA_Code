package server;

import java.sql.Connection;  
import java.sql.DriverManager;  
import java.sql.ResultSet;  
import java.sql.SQLException;  
import java.sql.Statement;  
  

  
public class JdbcAction {  
     // 创建静态全局变量    
    static Connection conn;    
    
    static Statement st;    
    /* 获取数据库连接的函数*/    
    public static Connection getConnection() { 
        Connection con = null;  //创建用于连接数据库的Connection对象    
        try {    
            Class.forName("com.mysql.jdbc.Driver");// 加载Mysql数据驱动    
                
            con = DriverManager.getConnection(    
                    "jdbc:mysql://localhost:3306/test", "root", "root");// 创建数据连接    
                
        } catch (Exception e) {    
            System.out.println("数据库连接失败" + e.getMessage());    
        }    
        return con; //返回所建立的数据库连接    
    }    
      
    public static void insert(String str){  
        conn = getConnection(); // 首先要获取连接，即连接到数据库    
        try { 
        	DataSplit.Split(str);
        	DataSplit v = new DataSplit();
            String sql = "INSERT INTO data(Id, EnvHumidity, EnvTemperature"
            		+ ", LightVal1, LightVal2, LightVal3, WaterLevel, Electricity, SoilHumidity)"    
                    + " VALUES ('1','"+v.getEnvHumidity()+"','"+v.getEnvTemperature() +"','"+v.getLightVal1() 
                    +"','"+v.getLightVal2() +"','"+v.getLightVal3() +"','"+v.getWaterLevel()
                    +"','"+v.getElectricity() +"','"+v.getSoilHumidity() +"')";  // 插入数据的sql语句    
            System.out.println("sql="+sql);  
            st = (Statement) conn.createStatement();    // 创建用于执行静态sql语句的Statement对象    
                
            int count = st.executeUpdate(sql);  // 执行插入操作的sql语句，并返回插入数据的个数    
                
            System.out.println("向users表中插入 " + count + " 条数据"); //输出插入操作的处理结果    
                
            conn.close();   //关闭数据库连接    
                
        } catch (SQLException e) {    
            System.out.println("插入数据失败" + e.getMessage());    
        }    
    }  
      
    public static boolean query(String guid) {    
        conn = getConnection(); //同样先要获取连接，即连接到数据库    
        try {    
            String sql = "select * from users where Id="+guid;     // 查询数据的sql语句    
            st = (Statement) conn.createStatement();    //创建用于执行静态sql语句的Statement对象，st属局部变量    
                
            ResultSet rs = st.executeQuery(sql);    //执行sql查询语句，返回查询数据的结果集    
            while (rs.next()) { // 判断是否还有下一个数据    
                return true ;  
            }  
            conn.close();   //关闭数据库连接    
                
        } catch (SQLException e) {    
            System.out.println("查询数据失败");    
        }  
        return false;    
    }    
        
    public static String backQuery(int guid) {    
        conn = getConnection(); //同样先要获取连接，即连接到数据库   
        String m2 = "";
        try {    
            String sql = "select * from users where Id="+guid;     // 查询数据的sql语句    
            st = (Statement) conn.createStatement();    //创建用于执行静态sql语句的Statement对象，st属局部变量    
                
            ResultSet rs = st.executeQuery(sql);    //执行sql查询语句，返回查询数据的结果集    
            if(rs.next()) { // 判断是否还有下一个数据    
            	m2 = rs.getString(2)+","+rs.getString(3)+","+rs.getString(4)+","+rs.getString(5)+","
            				+ rs.getString(6)+","+rs.getString(7)+","+ rs.getString(8)+","+rs.getString(9)+",#";  
            }  
            conn.close();   //关闭数据库连接    
                
        } catch (SQLException e) {    
            System.out.println("查询数据失败");    
        }  
        return m2;    
    }
    
    /* 更新符合要求的记录，并返回更新的记录数目*/    
    public static void update(String str) {    
        conn = getConnection(); //同样先要获取连接，即连接到数据库   
        try {    
        	DataSplit.Split(str);
        	DataSplit v = new DataSplit();
            String sql = "update data set EnvHumidity=" + v.getEnvHumidity() +",EnvTemperature=" + v.getEnvTemperature()
            		+ ", LightVal1=" + v.getLightVal1() +", LightVal2=" + v.getLightVal2() +", LightVal3=" + v.getLightVal3() 
            		+ ", WaterLevel=" + v.getWaterLevel() +", Electricity=" + v.getElectricity() 
            		+", SoilHumidity=" + v.getSoilHumidity() +" where Id='1' ";// 更新数据的sql语句    
                
            st = (Statement) conn.createStatement();    //创建用于执行静态sql语句的Statement对象，st属局部变量    
                
            int count = st.executeUpdate(sql);// 执行更新操作的sql语句，返回更新数据的个数    
                
            System.out.println("users表中更新 " + count + " 条数据");      //输出更新操作的处理结果    
                
            conn.close();   //关闭数据库连接    
                
        } catch (SQLException e) {    
            System.out.println("更新数据失败");    
        }    
    }
    public static void main(String[] args) {
    	
    	
    }
}  
