package matrixChain;

public class matrixChain {//矩阵连乘 最优解 P47

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}
	//一维数组P存储n个矩阵的行列值, 二维数组m存储最优值, 二维数组s记录最优断开位置
	public static void MatrixChain(int p[], int n, int m[][], int s[][]){
		for(int i=0; i<=n; i++)//单个矩阵
			m[i][i] = 0;
		for(int r=2; r<=n; r++){//多个矩阵
			for(int len=1; len<=n-r+1; len++){
				int j = len + r -1;
				m[len][j] = m[len+1][j] +p[len-1]*p[len]*p[j];
				s[len][j] = len;
				for(int k=len+1; k<j; k++){
					int t = m[len][k] + m[k+1][j] + p[len-1]*p[k]*p[j];
					if(t < m[len][j]){
						m[len][j] = t;
						s[len][j] = k;
					}
				}
			}
		}
	}

}
